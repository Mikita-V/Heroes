@using MVCPL.Util.Extensions
@using MVCPL.Util.HtmlHelpers
@model MVCPL.Models.UserViewModel

<div class="modal fade" id="editModal" role="dialog">
    <div class="modal-dialog">
        @using (Html.BeginForm("Update", "User", FormMethod.Post, new { enctype = "multipart/form-data", id = "editFormId" }))
        {
            <div class="modal-content">
                
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Edit User</h4>
                </div>

                <div class="modal-body">          
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            <div class="col-md-6 col-md-offset-3">
                                @Html.CustomImage(Model.Photo.ToBase64String(), "...", 150, 150)
                                @Html.TextBoxFor(model => model.Photo, new {type = "file"})
                                @*@Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-3"})
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new {@class = "control-label col-md-3"})
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.BirthDate, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.Age, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-6 col-md-offset-3">
                                @if (Model.Rewards != null && Model.Rewards.Any())
                                {
                                    //TODO: refactor
                                    for (int i = 0; i < Model.Rewards.Count; ++i)
                                    {
                                        var reward = Model.Rewards[i];
                                        @Html.HiddenFor(x => x.Rewards[i].Id)
                                        @Html.HiddenFor(x => x.Rewards[i].Description)
                                        @Html.HiddenFor(x => x.Rewards[i].Title)
                                        @Html.CheckBoxFor(x => x.Rewards[i].IsSelected)
                                        @Html.LabelFor(x => x.Rewards[i].Title, reward.Title)
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <input type="submit" value="Save" class="btn btn-default"/>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>

            </div>
         }
    </div>
</div>

@*TODO: refactor*@
<script src="../../Scripts/jquery.validate.js"></script>
<script src="../../Scripts/jquery.validate.unobtrusive.js"></script>
<script>

    $(function () {
        $.validator.unobtrusive.parse("#editFormId");
    });

</script>
